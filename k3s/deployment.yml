# Deployments
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
  namespace: egs-mar-ket-place
spec:
  replicas: 3
  selector:
    matchLabels:
      app: products
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
      - name: products
        image: registry.deti:5000/mar_ket/produtos:v1
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: entities
  namespace: egs-mar-ket-place
spec:
  replicas: 1
  selector:
    matchLabels:
      app: entities
  template:
    metadata:
      labels:
        app: entities
    spec:
      containers:
      - name: entities
        image: registry.deti:5000/mar_ket/entities:v1
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments
  namespace: egs-mar-ket-place
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments
  template:
    metadata:
      labels:
        app: payments
    spec:
      containers:
      - name: payments
        image: registry.deti:5000/mar_ket/payments:v1
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sales
  namespace: egs-mar-ket-place
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sales
  template:
    metadata:
      labels:
        app: sales
    spec:
      containers:
      - name: sales
        image: registry.deti:5000/mar_ket/sales:v1
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authservice
  namespace: egs-mar-ket-place
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authservice
  template:
    metadata:
      labels:
        app: authservice
    spec:
      containers:
      - name: authservice
        image: registry.deti:5000/mar_ket/authservice:v1
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parse-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parse-server
  template:
    metadata:
      labels:
        app: parse-server
    spec:
      containers:
        - name: parse-server
          image: bitnami/parse:latest
          ports:
            - containerPort: 1337
          env:
            - name: PARSE_DATABASE_NAME 
              value: "bitnami_parse"
            - name: PARSE_DATABASE_PASSWORD
              value: "bitnami123"
            - name: PARSE_DATABASE_HOST
              value: "mongodb"
            - name: PARSE_DATABASE_PORT_NUMBER
              value: "27017"
            - name: PARSE_DATABASE_USER
              value: "bn_parse"
            - name: PATH
              value: "/opt/bitnami/python/bin:/opt/bitnami/node/bin:/opt/bitnami/mongodb/bin:/opt/bitnami/parse/bin:/opt/bitnami/common/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            - name: BITNAMI_APP_NAME
              value: "parse"
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: parse-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parse-mongodb
  template:
    metadata:
      labels:
        app: parse-mongodb
    spec:
      securityContext:
        runAsUser: 1001
      containers:
        - name: parse-mongodb
          image: bitnami/mongodb:5.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-parse-volume
              mountPath: /bitnami/mongodb
          env:
            - name: MONGODB_USERNAME
              value: "bn_parse"
            - name: MONGODB_DATABASE 
              value: "bitnami_parse"
            - name: MONGODB_PASSWORD 
              value: "bitnami123"
            - name: ALLOW_EMPTY_PASSWORD
              value: yes
            - name: PATH 
              value: "/opt/bitnami/mongodb/bin:/opt/bitnami/common/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            - name: BITNAMI_APP_NAME 
              value: "mongodb"
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-parse-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-parse-service
spec:
  selector:
    app: mongodb-parse
  ports:
    - protocol: TCP
      port: 27017
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace: egs-mar-ket-place
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-gateway
  template:
    metadata:
      labels:
        app: kong-gateway
    spec:
      containers:
      - name: kong-gateway
        image: docker.io/kong/kong-gateway:3.2.1.0
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
          - name: KONG_LOG_LEVEL
            value: "notice"
          - name: KONG_PROXY_LISTEN
            value: "0.0.0.0:8000"
          - name: KONG_PROXY_LISTEN_SSL
            value: "0.0.0.0:8443"
          - name: KONG_ADMIN_LISTEN
            value: "0.0.0.0:8001"
          - name: KONG_DATABASE
            value: "postgres"
          - name: KONG_PG_USER
            value: "kong"
          - name: KONG_PG_PASSWORD
            value: "kongpass"
          - name: KONG_PG_HOST
            value: "kongdb"

        ports:
          - containerPort: 8000
          - containerPort: 8443
          - containerPort: 8001
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-db
  template:
    metadata:
      labels:
        app: kong-db
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_USER
              value: "kong"
            - name: POSTGRES_PASSWORD
              value: "kongpass"
            - name: POSTGRES_DB
              value: "kong"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-kong-volume
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-kong-volume
          persistentVolumeClaim:
            claimName: postgres-kong-volume-claim
---
# ads deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ads
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ads
  template:
    metadata:
      labels:
        app: ads
    spec:
      securityContext:
        runAsUser: 1001
      containers:
        - name: ads
          image: registry.deti:5000/mar_ket/ads:v1
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
            - name: MONGODB_URI
              value: "mongodb://bn_parse:bitnami123@host:port/bitnami_parse"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ads-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ads-mongodb
  template:
    metadata:
      labels:
        app: ads-mongodb
    spec:
      securityContext:
        runAsUser: 1001
      containers:
        - name: ads-mongodb
          image: bitnami/mongodb:5.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-ads-volume
              mountPath: /bitnami/mongodb
          env:
            - name: MONGODB_USERNAME
              value: "bn_parse"
            - name: MONGODB_DATABASE 
              value: "bitnami_parse"
            - name: MONGODB_PASSWORD 
              value: "bitnami123"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: PATH 
              value: "/opt/bitnami/mongodb/bin:/opt/bitnami/common/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            - name: BITNAMI_APP_NAME 
              value: "mongodb"
      volumes:
        - name: mongo-ads-volume
          persistentVolumeClaim:
            claimName: mongo-data-ads
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-ads-service
spec:
  selector:
    app: ads-mongodb
  ports:
    - protocol: TCP
      port: 27017
---

---
# user app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userapp
  namespace: egs-mar-ket-place
spec:
  replicas: 3
  selector:
    matchLabels:
      app: userapp
  template:
    metadata:
      labels:
        app: userapp
    spec:
      containers:
      - name: userapp
        image: registry.deti:5000/mar_ket/userapp:v3
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 80
---


# Services
---
# use this service so that i can spin up a migration kong
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  selector:
    app: kong-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
--- 
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-proxy
  namespace: egs-mar-ket-place
spec:
  ports:
  - name: 
    port: 8000
    targetPort: 8000
  selector:
    app: kong-gateway

apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-admin-api
  namespace: egs-mar-ket-place
spec:
  ports:
  - name: 
    port: 8001
    targetPort: 8001
  selector:
    app: kong-gateway
---





# Routes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-proxy-ingress
  namespace: egs-mar-ket-place
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http
    traefik.ingress.kubernetes.io/redirect-entry-point: http
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: marketplace.deti
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-gateway-proxy
            port: 
              number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-admin-ingress
  namespace: egs-mar-ket-place
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http
    traefik.ingress.kubernetes.io/redirect-entry-point: http
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: marketplace.deti
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-gateway-admin-api
            port: 
              number: 8001
